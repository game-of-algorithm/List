// 2.1.2 最多被交换n-1 次, 912345, 1次 n/n
// 2.1.6 插入排序 因为比较次数少, 交换次数两种排序都为0
// 2.1.7 选择排序
// 2.1.14
// 2.2.4 是否当前仅当两个输入的子数组都有序时原地归并的抽象方法才能得到正确的结果? 证明你的结论, 或者给出一个反例
// 答: 见mergeSort.js, 因为并不会对左右两边排序
// 2.2.7 证明归并排序的比较次数是单调递增的
// 答: 根据命题f得出 归并的比较次数为1/2NlgN到NlgN次. 可知比较次数取决于N, 那么就有N越大则次数越大
// 2.2.17 链表排序 实现对链表的自然排序
