
   链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的。

   链表由一系列结点（链表中每一个元素称为结点）组成，结点可以在运行时动态生成。

   每个结点包括两个部分：一个是存储数据元素的数据域，另一个是存储下一个结点地址的指针域（也可为空 null）。

   举个栗子：火车🚄🚆🚆🚆🚆  每个车厢是一个节点（node），车厢里存着自己的东西，车厢之间有链接。


   数组
   好处：处理方便，可以直接访问任意位置的元素。
   缺点：数组大小是固定的，插入元素成本很高，因为需要移动元素（物理存储上的位置？？）。

   链表
   好处：添加、移除元素时不需要移动其他元素；链表需要指针，实现时要多注意。
   缺点：想要访问链表中的元素，需要从头开始迭代，直到找到所需元素。

一个线性表是n个具有相同特性的数据元素的有限序列。
线性表中数据元素之间的关系是一对一的关系，即除了第一个和最后一个数据元素之外，其它数据元素都是首尾相接的（注意，这句话只适用大部分线性表，而不是全部。比如，循环链表逻辑层次上也是一种线性表（存储层次上属于链式存储），但是把最后一个数据元素的尾指针指向了首位结点）。
